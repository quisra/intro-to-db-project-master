CREATE TABLE DEPARTMENT ( 
    code                VARCHAR(4) NOT NULL,
    department_name     VARCHAR(30),
    college             VARCHAR(50),
    office_number       INT         CHECK(office_number >= 0 AND office_number <= 9999),
    office_phone        CHAR(10),
    PRIMARY KEY (code),
    UNIQUE(department_name)
);

CREATE TABLE COURSE ( 
    course_number   VARCHAR(7) NOT NULL,
    description     VARCHAR(200),
    course_level    INT,
    course_name     VARCHAR(30),
    semester_hours  FLOAT,     
    department      VARCHAR(4),
    PRIMARY KEY (course_number),
    FOREIGN KEY (department) REFERENCES DEPARTMENT(code)
        ON DELETE CASCADE
);

CREATE TABLE STUDENT ( 
    n_number            INT             CHECK(n_number >= 0 AND n_number <= 99999999) NOT NULL, 
    degree              VARCHAR(15), 
    sex                 VARCHAR(6), 
    birthdate           DATE, 
    ssn                 INT             CHECK(ssn >= 0 AND ssn <= 999999999), 
    current_street      VARCHAR(60), 
    current_city        VARCHAR(30), 
    current_state       VARCHAR(13), 
    current_zip         INT             CHECK(current_zip >= 0 and current_zip <= 99999), 
    current_phone       CHAR(10),
    first_name          VARCHAR(30), 
    middle_initial      CHAR(1), 
    last_name           VARCHAR(30)     NOT NULL, 
    student_class       VARCHAR(8), 
    permanent_street    VARCHAR(60), 
    permanent_city      VARCHAR(30)     NOT NULL, 
    permanent_state     VARCHAR(13)     NOT NULL, 
    permanent_zip       INT             NOT NULL    CHECK(permanent_zip >= 0 and permanent_zip <= 99999), 
    permanent_phone     CHAR(10),
    minor               VARCHAR(4),
    major               VARCHAR(4),
    PRIMARY KEY (n_number), 
    UNIQUE(ssn),
    FOREIGN KEY (minor) REFERENCES DEPARTMENT(code) 
        ON DELETE SET NULL, 
    FOREIGN KEY (major) REFERENCES DEPARTMENT(code) 
        ON DELETE SET NULL
);

CREATE TABLE INSTRUCTOR ( 
    n_number            INT             CHECK(n_number >= 0 AND n_number <= 99999999) NOT NULL, 
    ssn                 INT             CHECK(ssn >= 0 AND ssn <= 999999999), 
    instructor_name     VARCHAR(45),
    age                 int             CHECK(age >= 16 AND age <= 150),
    personal_phone      INT             CHECK(personal_phone >= 0 AND personal_phone <= 9999999999), 
    office_phone        INT             CHECK(office_phone >= 0 AND office_phone <= 9999999999), 
    address             VARCHAR(100),
    department          VARCHAR(4),
    PRIMARY KEY (n_number),
    UNIQUE(ssn),
    FOREIGN KEY (department) REFERENCES DEPARTMENT(code) 
        ON DELETE SET NULL
);

CREATE TABLE SECTION ( 
    section_number  INT NOT NULL,
    course          VARCHAR(7) NOT NULL,
    section_year    INT             CHECK(section_year >= 1969) NOT NULL,
    semester        VARCHAR(8) NOT NULL,
    instructor      int,
    PRIMARY KEY (section_number, course, section_year, semester),
    FOREIGN KEY (instructor) REFERENCES INSTRUCTOR(n_number) 
        ON DELETE SET NULL,
    FOREIGN KEY (course) REFERENCES COURSE(course_number) 
        ON DELETE CASCADE
);

CREATE TABLE ENROLLED_IN ( 
    student         INT NOT NULL,
    course          VARCHAR(7) NOT NULL,
    section         INT NOT NULL,
    section_year    INT             CHECK(section_year >= 1969),
    semester        VARCHAR(8),
    grade           VARCHAR(2),
    PRIMARY KEY (student, course, section),
    FOREIGN KEY (student) REFERENCES STUDENT(n_number) 
        ON DELETE CASCADE, 
    FOREIGN KEY (section, course, section_year, semester) REFERENCES SECTION(section_number, course, section_year, semester) 
        ON DELETE CASCADE
);
